<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianziyou.bot.dao.OrderDao">
  <insert id="insertSelective" parameterType="com.lianziyou.bot.model.Order">
    <!--@mbg.generated-->
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="payNumber != null">
        pay_number,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="dataVersion != null">
        data_version,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="chargeCount != null">
        charge_count,
      </if>
      <if test="productName != null">
        product_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="payNumber != null">
        #{payNumber,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        #{dataVersion,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=BIGINT},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeCount != null">
        #{chargeCount,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.lianziyou.bot.model.Order">
    <!--@mbg.generated-->
    <!--@Table t_order-->
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="product_id" jdbcType="BIGINT" property="productId"/>
    <result column="user_id" jdbcType="BIGINT" property="userId"/>
    <result column="price" jdbcType="DECIMAL" property="price"/>
    <result column="pay_number" jdbcType="INTEGER" property="payNumber"/>
    <result column="state" jdbcType="INTEGER" property="state"/>
    <result column="pay_type" jdbcType="VARCHAR" property="payType"/>
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo"/>
    <result column="msg" jdbcType="VARCHAR" property="msg"/>
    <result column="data_version" jdbcType="INTEGER" property="dataVersion"/>
    <result column="deleted" jdbcType="INTEGER" property="deleted"/>
    <result column="creator" jdbcType="BIGINT" property="creator"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="operator" jdbcType="BIGINT" property="operator"/>
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime"/>
    <result column="charge_count" jdbcType="INTEGER" property="chargeCount"/>
    <result column="product_name" jdbcType="VARCHAR" property="productName"/>
  </resultMap>
  <select id="userOrderList" resultType="com.lianziyou.bot.model.res.sys.ClientOrderRes">
    select *
    from t_order t
    where user_id = #{userId}
    order by t.id desc
  </select>
  <select id="queryOrder" resultType="com.lianziyou.bot.model.res.sys.admin.OrderQueryRes">
    SELECT
    t.id,
    t.create_time,
    p.`name` AS productName,
    u.`name` as userName,
    u.mobile,
    t.price,
    t.pay_number,
    t.pay_type,
    t.state,
    t.trade_no,
    t.msg
    FROM
    t_order t
    LEFT JOIN product p ON p.id = t.product_id
    LEFT JOIN `t_user` u ON u.id = t.user_id
    where t.deleted = 0
    <if test="req.mobile != null and req.mobile != ''">
      <bind name="mobile" value="'%' + req.mobile + '%'"/>
      and u.mobile like #{mobile}
    </if>
    <if test="req.state != null">
      and t.state like #{req.state}
    </if>
    order by u.id desc
  </select>
  <select id="queryHomeOrder" resultType="com.lianziyou.bot.model.res.sys.admin.AdminHomeOrder">
    SELECT count(1)                             AS orderNumber,
           date_format(create_time, '%Y-%m-%d') as days
    FROM t_order
    WHERE YEAR(create_time) = YEAR(
      now())
      AND MONTH(create_time)
    GROUP BY date_format(
               create_time,
               '%Y-%m-%d'
               )
  </select>
  <select id="queryHomeOrderPrice"
    resultType="com.lianziyou.bot.model.res.sys.admin.AdminHomeOrderPrice">
    SELECT sum(price)                           AS price,
           date_format(create_time, '%Y-%m-%d') AS days
    FROM t_order
    WHERE YEAR(create_time) = YEAR(
      now())
      AND MONTH(create_time)
      and state = 1
    GROUP BY date_format(
               create_time,
               '%Y-%m-%d'
               )
  </select>


  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, product_id, user_id, price, pay_number, `state`, pay_type, trade_no, msg, data_version,
    deleted, creator, create_time, `operator`, operate_time, charge_count, product_name
  </sql>
  <update id="updateByPrimaryKeySelective" parameterType="com.lianziyou.bot.model.Order">
    <!--@mbg.generated-->
    update t_order
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="payNumber != null">
        pay_number = #{payNumber,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        data_version = #{dataVersion,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=BIGINT},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeCount != null">
        charge_count = #{chargeCount,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_order
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
    where id in
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="product_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="pay_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.payNumber,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`state` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.state,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="pay_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.payType,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="trade_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.tradeNo,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="msg = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.msg,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="data_version = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dataVersion,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.deleted,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="creator = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.creator,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`operator` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.operator,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="operate_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.operateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="charge_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.chargeCount,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="product_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productName,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_order
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
    where id in
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="product_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.productId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.price != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="pay_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.payNumber != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.payNumber,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`state` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.state != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.state,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="pay_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.payType != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.payType,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="trade_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.tradeNo != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.tradeNo,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="msg = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.msg != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.msg,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="data_version = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.dataVersion != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.dataVersion,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.deleted != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.deleted,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="creator = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.creator != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.creator,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="`operator` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.operator != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.operator,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="operate_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.operateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.operateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="charge_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.chargeCount != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.chargeCount,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="product_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.productName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
  </update>
</mapper>